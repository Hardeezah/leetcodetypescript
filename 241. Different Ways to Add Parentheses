function diffWaysToCompute(expression: string): number[] {
    
    const compute = (a: number, b: number, op: string): number => {
        if (op === '+') return a + b;
        if (op === '-') return a - b;
        if (op === '*') return a * b;
        
    };
    
    if (!expression.match(/[\+\-\*]/)) {
        return [parseInt(expression)];
    }
    
    const results: number[] = [];
    
    for (let i = 0; i < expression.length; i++) {
        const char = expression[i];
        
        if (char === '+' || char === '-' || char === '*') {
            const leftResults = diffWaysToCompute(expression.slice(0, i));
            const rightResults = diffWaysToCompute(expression.slice(i + 1));
            
            for (const left of leftResults) {
                for (const right of rightResults) {
                    results.push(compute(left, right, char));
                }
            }
        }
    }
    
    return results;
}
